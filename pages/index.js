import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import { useState } from "react";

export default function Home() {
  var [state, setState] = useState({});

  return (
    <div className={styles.container}>
      <Head>
        <title>Perfluoro Alkyl Acid Trendline Equations</title>
        {/* <meta name="description" content="Generated by create next app" /> */}
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        {JSON.stringify(state)}
      </div>
      <div className="table-responsive">
        <table className="table">
          <thead>
            <tr>
              <th scope="col">PFAA</th>
              <th scope="col">x input</th>
              <th scope="col">Shoot Equation</th>
              <th scope="col">y output</th>
              <th scope="col">
                R<sup>2</sup>
              </th>
              <th scope="col">95% CI</th>
              <th scope="col">x input</th>
              <th scope="col">Root Equation</th>
              <th scope="col">y output</th>
              <th scope="col">
                R<sup>2</sup>
              </th>
              <th scope="col">95% CI</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <th scope="row">PFBS</th>
              <td>
                <input type="number" onChange={(event)=>setState({...state, PFBSshootX: event.target.value})}/>
              </td>
              <td>y = −23.8ln(x) + 25.5</td>
              <td>{-23.8 * Math.log(state?.PFBSshootX) + 25.5}</td>
              <td>0.80</td>
              <td>17.9</td>
              <td>
              <input type="number" onChange={(event)=>setState({...state, PFBSrootX: event.target.value})}/>
              </td>
              <td>y = −12.3ln(x) + 10.3</td>
              <td>{-12.3 * Math.log(state?.PFBSrootX) + 10.3}</td>
              <td>0.61</td>
              <td>12.9</td>
            </tr>
            <tr>
              <th scope="row">PFHxS</th>
              <td>
              <input type="number" onChange={(event)=>setState({...state, PFHxSshootX: event.target.value})}/>
              </td>
              <td>y = −6.5ln(x) + 9.3</td>
              <td>{-6.5 * Math.log(state?.PFHxSshootX) + 9.3}</td>
              <td>0.44</td>
              <td>5.5</td>
              <td><input type="number" onChange={(event)=>setState({...state, PFHxSrootX: event.target.value})}/></td>
              <td>y = −2.3ln(x) + 3.1</td>
              <td>{-2.3 * Math.log(state?.PFHxSrootX) + 3.1}</td>
              <td>0.54</td>
              <td>2.3</td>
            </tr>
            <tr>
              <th scope="row">PFHpA</th>
              <td>
              <input type="number" onChange={(event)=>setState({...state, PFHpA: {shootX: event.target.value}})}/>
              </td>
              <td>y = −47.2ln(x) + 32.5</td>
              <td>y output</td>
              <td>0.68</td>
              <td>33.8</td>
              <td><input type="number" onChange={(event)=>setState({...state, PFHpA: {rootX: event.target.value}})}/></td>
              <td>y = −16.6ln(x) + 12.3</td>
              <td>y output</td>
              <td>0.88</td>
              <td>12.2</td>
            </tr>
            <tr>
              <th scope="row">PFOA</th>
              <td>
              <input type="number" onChange={(event)=>setState({...state, PFOA: {shootX: event.target.value}})}/>
              </td>
              <td>y = −11.9ln(x) + 9.9</td>
              <td>y output</td>
              <td>0.54</td>
              <td>6.4</td>
              <td><input type="number" onChange={(event)=>setState({...state, PFOA: {rootX: event.target.value}})}/></td>
              <td>y = −3.7ln(x) + 4.8</td>
              <td>y output</td>
              <td>0.54</td>
              <td>2.2</td>
            </tr>
            <tr>
              <th scope="row">PFOS</th>
              <td><input type="number" onChange={(event)=>setState({...state, PFOS: {shootX: event.target.value}})}/></td>
              <td>y = −2.7ln(x) + 3.4</td>
              <td>y output</td>
              <td>0.25</td>
              <td>2.2</td>
              <td><input type="number" onChange={(event)=>setState({...state, PFOS: {rootX: event.target.value}})}/></td>
              <td>y = −0.13ln(x) + 2.3</td>
              <td>y output</td>
              <td>0.01</td>
              <td>0.6</td>
            </tr>
            <tr>
              <th scope="row">PFNA</th>
              <td><input type="number" onChange={(event)=>setState({...state, PFNA: {shootX: event.target.value}})}/></td>
              <td>y = −5.5ln(x) + 5.2</td>
              <td>y output</td>
              <td>0.44</td>
              <td>4.9</td>
              <td><input type="number" onChange={(event)=>setState({...state, PFNA: {rootX: event.target.value}})}/></td>
              <td>y = −1.45ln(x) + 2.4</td>
              <td>y output</td>
              <td>0.50</td>
              <td>1.4</td>
            </tr>
            <tr>
              <th scope="row">All PFAAs</th>
              <td><input type="number" onChange={(event)=>setState({...state, AllPFNAS: {shootX: event.target.value}})}/></td>
              <td>y = −14.6ln(x) + 14.4</td>
              <td>y output</td>
              <td>0.27</td>
              <td>4.16</td>
              <td><input type="number" onChange={(event)=>setState({...state, AllPFNAS: {rootX: event.target.value}})}/></td>
              <td>y = −5.9ln(x) + 5.8</td>
              <td>y output</td>
              <td>0.33</td>
              <td>1.75</td>
            </tr>
          </tbody>
        </table>
      </div>
    </div>
  );
}
